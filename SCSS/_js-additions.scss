.normalize {
  transform: none;
}
.left-curve0 {
  transform: translateY(0rem);
}
.left-curve1 {
  transform: translateY(-0.1rem);
}
.left-curve2 {
  transform: translateY(-0.2rem);
}
.left-curve3 {
  transform: translateY(-0.3rem);
}
.left-curve4 {
  transform: translateY(-0.4rem);
}
.left-curve5 {
  transform: translateY(-0.5rem);
}
.left-curve6 {
  transform: translateY(-0.6rem);
}
.left-curve7 {
  transform: translateY(-0.7rem);
}
.left-curve8 {
  transform: translateY(-0.8rem);
}
.left-curve9 {
  transform: translateY(-0.9rem);
}
.left-curve10 {
  transform: translateY(-1rem);
}
.left-curve11 {
  transform: translateY(-0.9rem);
}
.left-curve12 {
  transform: translateY(-0.8rem);
}
.left-curve13 {
  transform: translateY(-0.7rem);
}
.left-curve14 {
  transform: translateY(-0.6rem);
}
.left-curve15 {
  transform: translateY(-0.5rem);
}
.left-curve16 {
  transform: translateY(-0.4rem);
}
.left-curve17 {
  transform: translateY(-0.3rem);
}
.left-curve18 {
  transform: translateY(-0.2rem);
}
.left-curve19 {
  transform: translateY(-0.1rem);
}
.left-curve20 {
  transform: translateY(0rem);
}
.left-curve21 {
  transform: translateY(-0.9rem);
}
.left-curve22 {
  transform: translateY(-0.8rem);
}
.left-curve23 {
  transform: translateY(-0.7rem);
}
.left-curve24 {
  transform: translateY(-0.6rem);
}
.left-curve25 {
  transform: translateY(-0.5rem);
}
.left-curve26 {
  transform: translateY(-0.4rem);
}
.left-curve27 {
  transform: translateY(-0.3rem);
}
.left-curve28 {
  transform: translateY(-0.2rem);
}
.left-curve29 {
  transform: translateY(-0.1rem);
}
.left-curve30 {
  transform: translateY(0rem);
}
.left-curve31 {
  transform: translateY(-0.9rem);
}
.left-curve32 {
  transform: translateY(-0.8rem);
}
.left-curve33 {
  transform: translateY(-0.7rem);
}
.left-curve34 {
  transform: translateY(-0.6rem);
}
.left-curve35 {
  transform: translateY(-0.5rem);
}
.left-curve36 {
  transform: translateY(-0.4rem);
}
.left-curve37 {
  transform: translateY(-0.3rem);
}
.left-curve38 {
  transform: translateY(-0.3rem);
}
.left-curve39 {
  transform: translateY(-0.1rem);
}
.left-curve40 {
  transform: translateY(0rem);
}

.right-curve0 {
  color: green;
}
.right-curve1 {
  color: darken(red, 5%);
}
.right-curve2 {
  color: darken(red, 10%);
}
.right-curve3 {
  color: darken(red, 15%);
}
.right-curve4 {
  color: darken(red, 20%);
}
.right-curve5 {
  color: darken(red, 25%);
  // transform: translateY(3rem) !important;
}
.right-curve6 {
  color: darken(red, 30%);
}
.right-curve7 {
  color: darken(red, 35%);
}
.right-curve8 {
  color: darken(red, 40%);
}
.right-curve9 {
  color: darken(red, 40%);
  color: green;
}

.book-bg-zoom {
  transform: scaleX(1.5) scaleY(1.5) !important;
}
.page-to-center {
  transform: translate(-50%, -50%) !important;
  // width: 100%;
  // width: 100% !important;
}
// .page-to-up {
//   transform: translateY(-100vh) !important;
// }
.page-to-down {
  transform: translate(-50%, 50%) !important;
  // width: 100% !important;
}
.body-zoomed {
  background: black !important;
  // color: white;
}
// .book-screen-zoomed {
//   //   transform: scale(1.1);
//   flex-direction: column !important;
//   height: fit-content !important;
//   //   As already anwsered, flex-direction can't be animated directly, and browsers "have no idea" how to interpolate the positions of flex items visually during such transition. But you can kind of emulate such transition by transitioning transforms and changing flex-direction on transitionend event (a quick demo to illustrate the idea: http://codepen.io/SelenIT/pen/ZBXrXV/).
// }
// .page-zoomed {
//   //   text-align: center !important;
//   width: 100% !important;
// }
.hidden {
  visibility: hidden;
}
// .shown {
//   visibility: visible !important;
//   display: block !important;
//   transform: none !important;
// }
